plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// configurations.all {
//     exclude group: 'com.huawei.hms', module: 'hmscoreinstaller'
// }

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.shsh.messenger"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.shsh.messenger"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = 6
        versionName = flutter.versionName
    }
    signingConfigs {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            crunchPngs false
            minifyEnabled false // Отключить минификацию
            shrinkResources false // Отключить удаление неиспользуемых ресурсов
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}
flutter {
    source = "../.."
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:31.2.2')
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70' // Bouncy Castle
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70' // Bouncy Castle PKIX
    implementation 'org.conscrypt:conscrypt-openjdk:2.5.2' // Conscrypt
    implementation 'org.openjsse:openjsse:1.1.6' // OpenJSSE
    // implementation 'com.huawei.hms:push:6.7.0.300'
}

// Применяем плагин Google Services в самом конце файла
apply plugin: 'com.google.gms.google-services'
// apply plugin: 'com.huawei.agconnect'